stages:
#  - pre_requirements
  - build
  - deploy
  - test_develop_app
  - deploy_to_prod
  - test_prod

variables:
  DEV_SERVER_HOST: 1.1.1.1
  DEV_ENDPOINT: http://1.1.1.1:3000
  PROD_SERVER_HOST: 2.2.2.2
  PROD_ENDPOINT: http://2.2.2.2:4000

pre_requirements:
  image: node:17-alpine3.14
  stage: pre_requirements
  tags:
    - node1
  before_script:
    # экспортируем версию приложения в переменную
    - export APP_VERSION=$(cat package.json | jq -r .version)
  script:
    - echo $CI_PIPELINE_IID
    - echo $APP_VERSION


build_image:
  stage: build
  tags:
    - node1
  before_script:
    - export APP_VERSION=$(cat package.json | jq -r .version)
    - export VERSION=$APP_VERSION.$CI_PIPELINE_IID
    # создаем новый тег при каждой сборке
    - echo $VERSION > version-file.txt

    # логинимся в докер хаб
    - docker login -u "$CI_REGISTRY_USER" -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
 
    # добавялем текущую версию сборки на страницу приложения
    - rpl  -q version version_build_$VERSION files/views/index.html  > /dev/null 2>&1
  script:
    # собираем образ
    - docker build -t $IMAGE_NAME:$VERSION .

    # запускаем образ если нужно 
    #- docker run -d -p 3000:3000 $IMAGE_NAME:$APP_VERSION
    
    # пушим образ в докер хаб
    - docker push $IMAGE_NAME:$VERSION
  artifacts:
    paths:
    - version-file.txt
  
deploy_to_dev:
  stage: deploy
  tags: 
    - node1
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    #- export APP_VERSION=$(cat package.json | jq -r .version)
    - export VERSION=$(cat version-file.txt) 

  script:
  # логинимся на девелоп сервер, на нем логинимся на докер хаб, тащим с него образ и запускаем   
     - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY  gitlab-runner@$DEV_SERVER_HOST "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        docker run -d -p 3000:3000 $IMAGE_NAME:$VERSION"

test_develop:
  stage: test_develop_app
  tags: 
    - node1
  script:
  # курлом получем ответ от приложения на 3000 порту
    - curl -Is http://1.1.1.1:3000 | head -n 1
  

deploy_to_prod:
  stage: deploy_to_prod
  tags: 
    - node1
  before_script:
    - export VERSION=$(cat version-file.txt)  
    - chmod 400 $SSH_PRIVATE_KEY
  script:
  # логинимся на прод сервер, на нем логинимся на докер хаб, ташщим с него образ и запускаем 
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY  gitlab-runner@$PROD_SERVER_HOST "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        docker run -d -p 4000:3000 $IMAGE_NAME:$VERSION"    
  # ручное подтверждение запуска в прод
  when: manual

run_test_to_prod:
  stage: test_prod
  needs:
    - deploy_to_prod
  tags: 
    - node1
  script:
  # курлом получем ответ от приложения на 4000 порту на проде
    - curl -Is http://2.2.2.2:4000 | head -n 1
